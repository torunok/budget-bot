#FILE: app/handlers/statistics.py#

"""
–û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
"""
import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from app.services.sheets_service import sheets_service
from app.keyboards.inline import get_stats_period_keyboard
from app.utils.formatters import format_statistics, format_currency
from app.utils.helpers import filter_transactions_by_period

logger = logging.getLogger(__name__)
router = Router()


@router.message(F.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_statistics(message: Message):
    """–ü–æ–∫–∞–∑—É—î –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
    nickname = message.from_user.username or "anonymous"
    
    try:
        balance, currency = sheets_service.get_current_balance(nickname)
        transactions = sheets_service.get_all_transactions(nickname)
        
        # –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Å—å–æ–≥–æ–¥–Ω—ñ—à–Ω—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó
        today_transactions = filter_transactions_by_period(
            [t for t in transactions if not t.get('Is_Subscription')],
            'today'
        )
        
        stats_text = format_statistics(today_transactions, currency)
        
        message_text = (
            f"üí∞ <b>–ü–æ—Ç–æ—á–Ω–∏–π –±–∞–ª–∞–Ω—Å:</b> {format_currency(balance, currency)}\n\n"
            f"<b>–°—å–æ–≥–æ–¥–Ω—ñ:</b>\n{stats_text}\n\n"
            f"–û–±–µ—Ä–∏ –ø–µ—Ä—ñ–æ–¥ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ—ó —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:"
        )
        
        await message.answer(
            message_text,
            reply_markup=get_stats_period_keyboard()
        )
        
    except Exception as e:
        logger.error(f"Error showing statistics: {e}", exc_info=True)
        await message.answer("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")


@router.callback_query(F.data.startswith("stats_"))
async def show_period_statistics(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∑–∞ –æ–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥"""
    period = callback.data.split("_")[1]
    nickname = callback.from_user.username or "anonymous"
    
    try:
        transactions = sheets_service.get_all_transactions(nickname)
        
        # –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∑–∞ –ø–µ—Ä—ñ–æ–¥–æ–º
        period_transactions = filter_transactions_by_period(
            [t for t in transactions if not t.get('Is_Subscription')],
            period
        )
        
        if not period_transactions:
            await callback.answer("–ó–∞ —Ü–µ–π –ø–µ—Ä—ñ–æ–¥ –Ω–µ–º–∞—î —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π", show_alert=True)
            return
        
        balance, currency = sheets_service.get_current_balance(nickname)
        stats_text = format_statistics(period_transactions, currency)
        
        period_names = {
            'today': '–°—å–æ–≥–æ–¥–Ω—ñ',
            'yesterday': '–í—á–æ—Ä–∞',
            '7days': '–ó–∞ 7 –¥–Ω—ñ–≤',
            '14days': '–ó–∞ 14 –¥–Ω—ñ–≤',
            'month': '–ó–∞ –º—ñ—Å—è—Ü—å',
            'year': '–ó–∞ —Ä—ñ–∫'
        }
        
        message_text = (
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {period_names.get(period, period)}</b>\n\n"
            f"üí∞ –ë–∞–ª–∞–Ω—Å: {format_currency(balance, currency)}\n\n"
            f"{stats_text}"
        )
        
        await callback.message.edit_text(
            message_text,
            reply_markup=get_stats_period_keyboard()
        )
        await callback.answer()
        
    except Exception as e:
        logger.error(f"Error showing period statistics: {e}", exc_info=True)
        await callback.answer("‚ùå –ü–æ–º–∏–ª–∫–∞", show_alert=True)


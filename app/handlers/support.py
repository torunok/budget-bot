#File: app/handlers/support.py

"""
–û–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ —Ç–∞ –≤—ñ–¥–≥—É–∫—ñ–≤
"""
import logging
from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery

from app.core.states import UserState
from app.services.sheets_service import sheets_service
from app.keyboards.inline import get_support_menu
from app.keyboards.reply import get_main_menu_keyboard

logger = logging.getLogger(__name__)
router = Router()


@router.message(F.text == "üí¨ –ü—ñ–¥—Ç—Ä–∏–º–∫–∞")
async def show_support(message: Message):
    """–ü–æ–∫–∞–∑—É—î –º–µ–Ω—é –ø—ñ–¥—Ç—Ä–∏–º–∫–∏"""
    await message.answer(
        "üí¨ <b>–ü—ñ–¥—Ç—Ä–∏–º–∫–∞</b>\n\n"
        "–ú–∞—î—à –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó?\n"
        "–û–±–∏—Ä–∞–π, —è–∫ –∑–≤'—è–∑–∞—Ç–∏—Å—è:",
        reply_markup=get_support_menu()
    )


@router.callback_query(F.data == "leave_feedback")
async def start_feedback(callback: CallbackQuery, state: FSMContext):
    """–ü–æ—á–∞—Ç–æ–∫ –∑–∞–ª–∏—à–µ–Ω–Ω—è –≤—ñ–¥–≥—É–∫—É"""
    await callback.message.edit_text(
        "üìù <b>–ó–∞–ª–∏—à —Å–≤—ñ–π –≤—ñ–¥–≥—É–∫</b>\n\n"
        "–ù–∞–ø–∏—à–∏, —â–æ —Ç–æ–±—ñ –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è,\n"
        "—â–æ –º–æ–∂–Ω–∞ –ø–æ–∫—Ä–∞—â–∏—Ç–∏, –∞–±–æ —è–∫—ñ\n"
        "—Ñ—É–Ω–∫—Ü—ñ—ó —Ç–∏ —Ö–æ—Ç—ñ–≤ –±–∏ –±–∞—á–∏—Ç–∏.\n\n"
        "–¢–≤–æ—è –¥—É–º–∫–∞ –¥—É–∂–µ –≤–∞–∂–ª–∏–≤–∞! üíô"
    )
    
    await state.set_state(UserState.add_feedback)
    await callback.answer()


@router.message(UserState.add_feedback)
async def process_feedback(message: Message, state: FSMContext):
    """–û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–≥—É–∫—É"""
    feedback_text = message.text.strip()
    username = message.from_user.username or "anonymous"
    
    try:
        sheets_service.append_feedback(username, feedback_text)
        
        await message.answer(
            "‚úÖ <b>–î—è–∫—É—é –∑–∞ –≤—ñ–¥–≥—É–∫!</b>\n\n"
            "–¢–≤–æ—è –¥—É–º–∫–∞ –¥–æ–ø–æ–º–æ–∂–µ –∑—Ä–æ–±–∏—Ç–∏\n"
            "–±–æ—Ç–∞ –∫—Ä–∞—â–∏–º! üöÄ",
            reply_markup=get_main_menu_keyboard()
        )
        
        logger.info(f"Feedback received from {username}")
        
        await state.clear()
        
    except Exception as e:
        logger.error(f"Error saving feedback: {e}", exc_info=True)
        await message.answer(
            "‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–≥—É–∫—É.\n"
            "–°–ø—Ä–æ–±—É–π –Ω–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—É –Ω–∞–ø—Ä—è–º—É.",
            reply_markup=get_main_menu_keyboard()
        )


def register_handlers(router_main):
    """–†–µ—î—Å—Ç—Ä—É—î —Ö–µ–Ω–¥–ª–µ—Ä–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏"""
    router_main.include_router(router)